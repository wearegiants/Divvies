{% include 'account-header' %}

<header class="page-header page-header-banner">
<h1><span>{{ 'customer.addresses.add_new' | t }}</span></h1>
</header>
<hr class="invisible">

<div id="account-addresses" class="text-center">

{% form 'customer_address', customer.new_address %}

<div class='fs-row'>
<div class="fs-cell fs-all-half">
<!--<label for="AddressFirstNameNew">{{ 'customer.addresses.first_name' | t }}</label>-->
<input placeholder="First Name" type="text" id="AddressFirstNameNew" class="form-entry text-center simple bg-color bg-color-gray input-full" name="address[first_name]" value="{{ form.first_name }}" autocapitalize="words">
</div>

<div class="fs-cell fs-all-half">
<!--<label for="AddressLastNameNew">{{ 'customer.addresses.last_name' | t }}</label>-->
<input placeholder="Last Name" type="text" id="AddressLastNameNew" class="form-entry text-center simple bg-color bg-color-gray input-full" name="address[last_name]" value="{{ form.last_name }}" autocapitalize="words">
</div>
</div>

<!--<label for="AddressCompanyNew">{{ 'customer.addresses.company' | t }}</label>-->
<input placeholder="Company" type="text" id="AddressCompanyNew" class="form-entry text-center simple bg-color bg-color-gray input-full" name="address[company]" value="{{ form.company }}" autocapitalize="words">

<!--<label for="AddressAddress1New">{{ 'customer.addresses.address1' | t }}</label>-->
<input placeholder="Address 1" type="text" id="AddressAddress1New" class="form-entry text-center simple bg-color bg-color-gray input-full" name="address[address1]" value="{{ form.address1 }}" autocapitalize="words">

<!--<label for="AddressAddress2New">{{ 'customer.addresses.address2' | t }}</label>-->
<input placeholder="Address 2" type="text" id="AddressAddress2New" class="form-entry text-center simple bg-color bg-color-gray input-full" name="address[address2]" value="{{ form.address2 }}" autocapitalize="words">

<div class="fs-row">
<div class="fs-cell fs-all-half">
<!--<label for="AddressCityNew">{{ 'customer.addresses.city' | t }}</label>-->
<input placeholder="City" type="text" id="AddressCityNew" class="form-entry text-center simple bg-color bg-color-gray input-full" name="address[city]" value="{{ form.city }}" autocapitalize="words">
</div>
<div class="fs-cell fs-all-half">
<!--<label for="AddressCountryNew">{{ 'customer.addresses.country' | t }}</label>-->
<select id="AddressCountryNew" class="form-entry text-center simple bg-color bg-color-gray input-full" name="address[country]" data-default="{{ form.country }}">{{ country_option_tags }}</select>
</div>
</div>

<!--<label for="AddressProvinceNew">{{ 'customer.addresses.province' | t }}</label>-->
<div id="AddressProvinceContainerNew" style="display:none">
<select id="AddressProvinceNew" class="form-entry text-center simple bg-color bg-color-gray input-full" name="address[province]" data-default="{{ form.province }}"></select>
</div>

<div class="fs-row">
<div class="fs-cell fs-all-half">
<!--<label for="AddressZipNew">{{ 'customer.addresses.zip' | t }}</label>-->
<input placeholder="Zip Code" type="text" id="AddressZipNew" class="form-entry text-center simple bg-color bg-color-gray input-full" name="address[zip]" value="{{ form.zip }}" autocapitalize="characters">
</div>
<div class="fs-cell fs-all-half">
<!--<label for="AddressPhoneNew">{{ 'customer.addresses.phone' | t }}</label>-->
<input placeholder="Phone Number" type="tel" id="AddressPhoneNew" class="form-entry text-center simple bg-color bg-color-gray input-full" name="address[phone]" value="{{ form.phone }}">
</div>
</div>

<p>
{{ form.set_as_default_checkbox }}
<label for="address_default_address_new" class="inline">{{ 'customer.addresses.set_default' | t }}</label>
</p>

<p><input type="submit" class="btn" value="{{ 'customer.addresses.add' | t }}"></p>
<p><a href="#" onclick="Shopify.CustomerAddress.toggleNewForm(); return false;">{{ 'customer.addresses.cancel' | t }}</a></p>

<hr>
{% endform %}

</div>

{% include 'account-footer' %}

<script>
// Initialize observers on address selectors
new Shopify.CountryProvinceSelector('AddressCountryNew', 'AddressProvinceNew', {
hideElement: 'AddressProvinceContainerNew'
});

// Setup province selector on each customer address
{% for address in customer.addresses %}
new Shopify.CountryProvinceSelector('AddressCountry_{{ address.id }}', 'AddressProvince_{{ address.id }}', {
hideElement: 'AddressProvinceContainer_{{ address.id }}'}
);
{% endfor %}

// Modified contents of customer_area.js (global asset)
Shopify.CustomerAddress = {
toggleForm: function(id) {
var editEl = document.getElementById('EditAddress_'+id);
editEl.style.display = editEl.style.display == 'none' ? '' : 'none';
return false;
},

toggleNewForm: function() {
var el = document.getElementById('AddAddress');
el.style.display = el.style.display == 'none' ? '' : 'none';
return false;
},

destroy: function(id, confirm_msg) {
if (confirm(confirm_msg || "Are you sure you wish to delete this address?")) {
Shopify.postLink('/account/addresses/'+id, {'parameters': {'_method': 'delete'}});
}
}
}
</script>
